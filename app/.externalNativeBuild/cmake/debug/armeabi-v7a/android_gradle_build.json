
{
	"buildFiles" : [ "C:/Users/liupei/FmodDemo/app/CMakeLists.txt" ],
	"cleanCommands" : 
	[
		"C:\\SDK\\cmake\\3.6.3155560\\bin\\cmake.exe --build C:\\Users\\liupei\\FmodDemo\\app\\.externalNativeBuild\\cmake\\debug\\armeabi-v7a --target clean"
	],
	"cppFileExtensions" : [ "cpp" ],
	"libraries" : 
	{
		"libfmod-Debug-armeabi-v7a" : 
		{
			"abi" : "armeabi-v7a",
			"artifactName" : "libfmod",
			"buildType" : "debug",
			"output" : "C:/Users/liupei/FmodDemo/app/src/main/jniLibs/armeabi-v7a/libfmod.so",
			"toolchain" : "181465261"
		},
		"libfmodL-Debug-armeabi-v7a" : 
		{
			"abi" : "armeabi-v7a",
			"artifactName" : "libfmodL",
			"buildType" : "debug",
			"output" : "C:/Users/liupei/FmodDemo/app/src/main/jniLibs/armeabi-v7a/libfmodL.so",
			"toolchain" : "181465261"
		},
		"voicer-Debug-armeabi-v7a" : 
		{
			"abi" : "armeabi-v7a",
			"artifactName" : "voicer",
			"buildCommand" : "C:\\SDK\\cmake\\3.6.3155560\\bin\\cmake.exe --build C:\\Users\\liupei\\FmodDemo\\app\\.externalNativeBuild\\cmake\\debug\\armeabi-v7a --target voicer",
			"buildType" : "debug",
			"files" : 
			[
				
				{
					"flags" : "  -target armv7-none-linux-androideabi -gcc-toolchain C:/SDK/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64 --sysroot=C:/SDK/ndk-bundle/platforms/android-15/arch-arm  -Dvoicer_EXPORTS -isystem C:\\SDK\\ndk-bundle\\sources\\cxx-stl\\gnu-libstdc++\\4.9\\include -isystem C:\\SDK\\ndk-bundle\\sources\\cxx-stl\\gnu-libstdc++\\4.9\\libs\\armeabi-v7a\\include -isystem C:\\SDK\\ndk-bundle\\sources\\cxx-stl\\gnu-libstdc++\\4.9\\include\\backward  -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fno-integrated-as -mthumb -Wa,--noexecstack -Wformat -Werror=format-security -fno-exceptions -fno-rtti -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fno-integrated-as -mthumb -Wa,--noexecstack -Wformat -Werror=format-security -fno-exceptions -fno-rtti  -std=gnu++11 -Wall -DGLM_FORCE_SIZE_T_LENGTH -DGLM_FORCE_RADIANS -O0 -fno-limit-debug-info -O0 -fno-limit-debug-info  -fPIC    -c ",
					"src" : "C:/Users/liupei/FmodDemo/app/src/main/cpp/play_sound.cpp",
					"workingDirectory" : "C:/Users/liupei/FmodDemo/app/.externalNativeBuild/cmake/debug/armeabi-v7a"
				},
				
				{
					"flags" : "  -target armv7-none-linux-androideabi -gcc-toolchain C:/SDK/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64 --sysroot=C:/SDK/ndk-bundle/platforms/android-15/arch-arm  -Dvoicer_EXPORTS -isystem C:\\SDK\\ndk-bundle\\sources\\cxx-stl\\gnu-libstdc++\\4.9\\include -isystem C:\\SDK\\ndk-bundle\\sources\\cxx-stl\\gnu-libstdc++\\4.9\\libs\\armeabi-v7a\\include -isystem C:\\SDK\\ndk-bundle\\sources\\cxx-stl\\gnu-libstdc++\\4.9\\include\\backward  -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fno-integrated-as -mthumb -Wa,--noexecstack -Wformat -Werror=format-security -fno-exceptions -fno-rtti -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fno-integrated-as -mthumb -Wa,--noexecstack -Wformat -Werror=format-security -fno-exceptions -fno-rtti  -std=gnu++11 -Wall -DGLM_FORCE_SIZE_T_LENGTH -DGLM_FORCE_RADIANS -O0 -fno-limit-debug-info -O0 -fno-limit-debug-info  -fPIC    -c ",
					"src" : "C:/Users/liupei/FmodDemo/app/src/main/cpp/common.cpp",
					"workingDirectory" : "C:/Users/liupei/FmodDemo/app/.externalNativeBuild/cmake/debug/armeabi-v7a"
				}
			],
			"output" : "C:/Users/liupei/FmodDemo/app/build/intermediates/cmake/debug/obj/armeabi-v7a/libvoicer.so",
			"toolchain" : "181465261"
		}
	},
	"toolchains" : 
	{
		"181465261" : 
		{
			"cCompilerExecutable" : "C:/SDK/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang.exe",
			"cppCompilerExecutable" : "C:/SDK/ndk-bundle/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe"
		}
	}
}
